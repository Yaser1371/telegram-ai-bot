import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import requests
import os

# طھظ†ط¸غŒظ… ظ„ط§ع¯
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# طھظˆع©ظ† ط±ط¨ط§طھ
TOKEN = "8461758139:AAFlNgfmogtox_tUhja7w6DyBG0sGKMXL7c"

# طھظ†ط¸غŒظ… طھظˆع©ظ† Hugging Face
HF_API_TOKEN = "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"
API_URL = "https://api-inference.huggingface.co/models/gpt2"  # ظ…غŒâ€Œطھظˆط§ظ†غŒط¯ ظ…ط¯ظ„ ط¯غŒع¯ط±غŒ ظ‡ظ… ط§ظ†طھط®ط§ط¨ ع©ظ†غŒط¯

headers = {"Authorization": f"Bearer {HF_API_TOKEN}"}

async def query_hf_api(prompt: str) -> str:
    try:
        response = requests.post(API_URL, headers=headers, json={"inputs": prompt})
        if response.status_code == 200:
            return response.json()[0]["generated_text"]
        else:
            return f"ط®ط·ط§: {response.status_code} - {response.text}"
    except Exception as e:
        return f"ظ…ط´ع©ظ„غŒ ط¯ط± ط§ط±طھط¨ط§ط· ط¨ط§ ظ‡ظˆط´ ظ…طµظ†ظˆط¹غŒ ظ¾غŒط´ ط¢ظ…ط¯: {str(e)}"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text('ط³ظ„ط§ظ…! ظ…ظ† غŒع© ط±ط¨ط§طھ ظ‡ظˆط´ ظ…طµظ†ظˆط¹غŒ ظ‡ط³طھظ…. ظ¾غŒط§ظ… ط®ظˆط¯ ط±ط§ ط¨ظپط±ط³طھغŒط¯.')

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text('ظ…ظ† ط¨ظ‡ ط´ظ…ط§ ع©ظ…ع© ظ…غŒâ€Œع©ظ†ظ…. ظپظ‚ط· ظ¾غŒط§ظ… ط®ظˆط¯ ط±ط§ ط¨ظپط±ط³طھغŒط¯.')

async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_message = update.message.text
    logger.info(f"ع©ط§ط±ط¨ط± ع¯ظپطھ: {user_message}")

    # ط¯ط±غŒط§ظپطھ ظ¾ط§ط³ط® ط§ط² ظ‡ظˆط´ ظ…طµظ†ظˆط¹غŒ
    ai_response = await query_hf_api(user_message)

    await update.message.reply_text(ai_response)

def main() -> None:
    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))

    # ط´ط±ظˆط¹ ط±ط¨ط§طھ
    application.run_polling()

if __name__ == "__main__":
    main()python-telegram-bot==22.5\nrequests\n
